Object initializer

Objects can be initialized using new Object(), Object.create(), or using the literal notation (initializer notation).

var p = {};
var q = {a: 'foo', b: 42, c: {}};

var a = 'foo', b = 42, c = {};
var r = {a: a, b: b, c: c};
var s = {a, b, c}; // ES6 or 2015 
console.log((s.a === {a}.a)); // true ES6 or 2015
console.log((s.a === { a: a }.a)); // true

// Method definitions - A property of an object can also refer to a function or a getter or setter method.
var t = {
  property: function (parameters) {},
  get property() {},
  set property(value) {}
};

// Shorthand method names (ES2015)
var u = {
  property(parameters) {}
};

// Computed property names (ES2015)
var prop = 'foo';
var v = {
  [prop]: 'hey',
  ['b' + 'ar']: 'there'
};

// Spread
var obj1 = { foo: 'bar', x: 42 };
var obj2 = { foo: 'baz', y: 13 };

var clonedObj = { ...obj1 };
// Object { foo: "bar", x: 42 }

var mergedObj = { ...obj1, ...obj2 };
// Object { foo: "baz", x: 42, y: 13 }
